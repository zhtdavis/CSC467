Terminals unused in grammar

   myToken1
   myToken2
   WHILE
   VOID


Grammar

    0 $accept: program $end

    1 program: scope

    2 scope: LEFT_CBRACKET declarations statements RIGHT_CBRACKET

    3 declarations: declarations declaration
    4             | %empty

    5 declaration: type IDENTIFIER SEMI_COLUMN
    6            | type IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN
    7            | CONST type IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN

    8 statements: statements statement
    9           | %empty

   10 statement: variable SINGLE_EQUAL expression SEMI_COLUMN
   11          | IF LEFT_BRACKET expression RIGHT_BRACKET statement
   12          | IF LEFT_BRACKET expression RIGHT_BRACKET statement ELSE statement
   13          | scope
   14          | SEMI_COLUMN

   15 arguments_opt: arguments
   16              | %empty

   17 arguments: arguments COMMA expression
   18          | expression

   19 expression: type LEFT_BRACKET arguments RIGHT_BRACKET
   20           | DP3 LEFT_BRACKET arguments_opt RIGHT_BRACKET
   21           | LIT LEFT_BRACKET arguments_opt RIGHT_BRACKET
   22           | RSQ LEFT_BRACKET arguments_opt RIGHT_BRACKET
   23           | INTEGER_LITERAL
   24           | FLOAT_LITERAL
   25           | BOOL_TRUE
   26           | BOOL_FALSE
   27           | variable
   28           | NOT expression
   29           | MINUS expression
   30           | expression LOGICAL_AND expression
   31           | expression LOGICAL_OR expression
   32           | expression DOUBLE_EQUAL expression
   33           | expression NOT_EQUAL expression
   34           | expression LESS expression
   35           | expression LESS_EQUAL expression
   36           | expression GREATER expression
   37           | expression GREATER_EQUAL expression
   38           | expression PLUS expression
   39           | expression MINUS expression
   40           | expression MULTI expression
   41           | expression DIVIDE expression
   42           | expression EXP expression
   43           | LEFT_BRACKET expression RIGHT_BRACKET

   44 variable: IDENTIFIER
   45         | IDENTIFIER LEFT_SBRACKET INTEGER_LITERAL RIGHT_SBRACKET

   46 type: INT
   47     | IVEC2
   48     | IVEC3
   49     | IVEC4
   50     | BOOL
   51     | BVEC2
   52     | BVEC3
   53     | BVEC4
   54     | FLOAT
   55     | VEC2
   56     | VEC3
   57     | VEC4


Terminals, with rules where they appear

$end (0) 0
error (256)
myToken1 (258)
myToken2 (259)
IF (260) 11 12
ELSE (261) 12
LEFT_CBRACKET (262) 2
RIGHT_CBRACKET (263) 2
LEFT_BRACKET (264) 11 12 19 20 21 22 43
RIGHT_BRACKET (265) 11 12 19 20 21 22 43
LEFT_SBRACKET (266) 45
RIGHT_SBRACKET (267) 45
COMMA (268) 17
SEMI_COLUMN (269) 5 6 7 10 14
BOOL_TRUE (270) 25
BOOL_FALSE (271) 26
SINGLE_EQUAL (272) 6 7 10
BOOL (273) 50
BVEC2 (274) 51
BVEC3 (275) 52
BVEC4 (276) 53
INT (277) 46
IVEC2 (278) 47
IVEC3 (279) 48
IVEC4 (280) 49
FLOAT (281) 54
VEC2 (282) 55
VEC3 (283) 56
VEC4 (284) 57
CONST (285) 7
LIT (286) 21
DP3 (287) 20
RSQ (288) 22
WHILE (289)
VOID (290)
NOT (291) 28
EXP (292) 42
MULTI (293) 40
DIVIDE (294) 41
PLUS (295) 38
MINUS (296) 29 39
DOUBLE_EQUAL (297) 32
NOT_EQUAL (298) 33
LESS (299) 34
LESS_EQUAL (300) 35
GREATER (301) 36
GREATER_EQUAL (302) 37
LOGICAL_AND (303) 30
LOGICAL_OR (304) 31
IDENTIFIER (305) 5 6 7 44 45
INTEGER_LITERAL (306) 23 45
FLOAT_LITERAL (307) 24
NO_ELSE (308)
UNARY_MINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
scope (57)
    on left: 2, on right: 1 13
declarations (58)
    on left: 3 4, on right: 2 3
declaration (59)
    on left: 5 6 7, on right: 3
statements (60)
    on left: 8 9, on right: 2 8
statement (61)
    on left: 10 11 12 13 14, on right: 8 11 12
arguments_opt (62)
    on left: 15 16, on right: 20 21 22
arguments (63)
    on left: 17 18, on right: 15 17 19
expression (64)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43, on right: 6 7 10 11 12 17 18 28 29 30 31
    32 33 34 35 36 37 38 39 40 41 42 43
variable (65)
    on left: 44 45, on right: 10 27
type (66)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57, on right: 5 6 7 19


State 0

    0 $accept: . program $end

    LEFT_CBRACKET  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


State 1

    2 scope: LEFT_CBRACKET . declarations statements RIGHT_CBRACKET

    $default  reduce using rule 4 (declarations)

    declarations  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: scope .

    $default  reduce using rule 1 (program)


State 4

    2 scope: LEFT_CBRACKET declarations . statements RIGHT_CBRACKET
    3 declarations: declarations . declaration

    BOOL   shift, and go to state 6
    BVEC2  shift, and go to state 7
    BVEC3  shift, and go to state 8
    BVEC4  shift, and go to state 9
    INT    shift, and go to state 10
    IVEC2  shift, and go to state 11
    IVEC3  shift, and go to state 12
    IVEC4  shift, and go to state 13
    FLOAT  shift, and go to state 14
    VEC2   shift, and go to state 15
    VEC3   shift, and go to state 16
    VEC4   shift, and go to state 17
    CONST  shift, and go to state 18

    $default  reduce using rule 9 (statements)

    declaration  go to state 19
    statements   go to state 20
    type         go to state 21


State 5

    0 $accept: program $end .

    $default  accept


State 6

   50 type: BOOL .

    $default  reduce using rule 50 (type)


State 7

   51 type: BVEC2 .

    $default  reduce using rule 51 (type)


State 8

   52 type: BVEC3 .

    $default  reduce using rule 52 (type)


State 9

   53 type: BVEC4 .

    $default  reduce using rule 53 (type)


State 10

   46 type: INT .

    $default  reduce using rule 46 (type)


State 11

   47 type: IVEC2 .

    $default  reduce using rule 47 (type)


State 12

   48 type: IVEC3 .

    $default  reduce using rule 48 (type)


State 13

   49 type: IVEC4 .

    $default  reduce using rule 49 (type)


State 14

   54 type: FLOAT .

    $default  reduce using rule 54 (type)


State 15

   55 type: VEC2 .

    $default  reduce using rule 55 (type)


State 16

   56 type: VEC3 .

    $default  reduce using rule 56 (type)


State 17

   57 type: VEC4 .

    $default  reduce using rule 57 (type)


State 18

    7 declaration: CONST . type IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN

    BOOL   shift, and go to state 6
    BVEC2  shift, and go to state 7
    BVEC3  shift, and go to state 8
    BVEC4  shift, and go to state 9
    INT    shift, and go to state 10
    IVEC2  shift, and go to state 11
    IVEC3  shift, and go to state 12
    IVEC4  shift, and go to state 13
    FLOAT  shift, and go to state 14
    VEC2   shift, and go to state 15
    VEC3   shift, and go to state 16
    VEC4   shift, and go to state 17

    type  go to state 22


State 19

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


State 20

    2 scope: LEFT_CBRACKET declarations statements . RIGHT_CBRACKET
    8 statements: statements . statement

    IF              shift, and go to state 23
    LEFT_CBRACKET   shift, and go to state 1
    RIGHT_CBRACKET  shift, and go to state 24
    SEMI_COLUMN     shift, and go to state 25
    IDENTIFIER      shift, and go to state 26

    scope      go to state 27
    statement  go to state 28
    variable   go to state 29


State 21

    5 declaration: type . IDENTIFIER SEMI_COLUMN
    6            | type . IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN

    IDENTIFIER  shift, and go to state 30


State 22

    7 declaration: CONST type . IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN

    IDENTIFIER  shift, and go to state 31


State 23

   11 statement: IF . LEFT_BRACKET expression RIGHT_BRACKET statement
   12          | IF . LEFT_BRACKET expression RIGHT_BRACKET statement ELSE statement

    LEFT_BRACKET  shift, and go to state 32


State 24

    2 scope: LEFT_CBRACKET declarations statements RIGHT_CBRACKET .

    $default  reduce using rule 2 (scope)


State 25

   14 statement: SEMI_COLUMN .

    $default  reduce using rule 14 (statement)


State 26

   44 variable: IDENTIFIER .
   45         | IDENTIFIER . LEFT_SBRACKET INTEGER_LITERAL RIGHT_SBRACKET

    LEFT_SBRACKET  shift, and go to state 33

    $default  reduce using rule 44 (variable)


State 27

   13 statement: scope .

    $default  reduce using rule 13 (statement)


State 28

    8 statements: statements statement .

    $default  reduce using rule 8 (statements)


State 29

   10 statement: variable . SINGLE_EQUAL expression SEMI_COLUMN

    SINGLE_EQUAL  shift, and go to state 34


State 30

    5 declaration: type IDENTIFIER . SEMI_COLUMN
    6            | type IDENTIFIER . SINGLE_EQUAL expression SEMI_COLUMN

    SEMI_COLUMN   shift, and go to state 35
    SINGLE_EQUAL  shift, and go to state 36


State 31

    7 declaration: CONST type IDENTIFIER . SINGLE_EQUAL expression SEMI_COLUMN

    SINGLE_EQUAL  shift, and go to state 37


State 32

   11 statement: IF LEFT_BRACKET . expression RIGHT_BRACKET statement
   12          | IF LEFT_BRACKET . expression RIGHT_BRACKET statement ELSE statement

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 48
    variable    go to state 49
    type        go to state 50


State 33

   45 variable: IDENTIFIER LEFT_SBRACKET . INTEGER_LITERAL RIGHT_SBRACKET

    INTEGER_LITERAL  shift, and go to state 51


State 34

   10 statement: variable SINGLE_EQUAL . expression SEMI_COLUMN

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 52
    variable    go to state 49
    type        go to state 50


State 35

    5 declaration: type IDENTIFIER SEMI_COLUMN .

    $default  reduce using rule 5 (declaration)


State 36

    6 declaration: type IDENTIFIER SINGLE_EQUAL . expression SEMI_COLUMN

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 53
    variable    go to state 49
    type        go to state 50


State 37

    7 declaration: CONST type IDENTIFIER SINGLE_EQUAL . expression SEMI_COLUMN

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 54
    variable    go to state 49
    type        go to state 50


State 38

   43 expression: LEFT_BRACKET . expression RIGHT_BRACKET

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 55
    variable    go to state 49
    type        go to state 50


State 39

   25 expression: BOOL_TRUE .

    $default  reduce using rule 25 (expression)


State 40

   26 expression: BOOL_FALSE .

    $default  reduce using rule 26 (expression)


State 41

   21 expression: LIT . LEFT_BRACKET arguments_opt RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 56


State 42

   20 expression: DP3 . LEFT_BRACKET arguments_opt RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 57


State 43

   22 expression: RSQ . LEFT_BRACKET arguments_opt RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 58


State 44

   28 expression: NOT . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 59
    variable    go to state 49
    type        go to state 50


State 45

   29 expression: MINUS . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 60
    variable    go to state 49
    type        go to state 50


State 46

   23 expression: INTEGER_LITERAL .

    $default  reduce using rule 23 (expression)


State 47

   24 expression: FLOAT_LITERAL .

    $default  reduce using rule 24 (expression)


State 48

   11 statement: IF LEFT_BRACKET expression . RIGHT_BRACKET statement
   12          | IF LEFT_BRACKET expression . RIGHT_BRACKET statement ELSE statement
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    RIGHT_BRACKET  shift, and go to state 61
    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74


State 49

   27 expression: variable .

    $default  reduce using rule 27 (expression)


State 50

   19 expression: type . LEFT_BRACKET arguments RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 75


State 51

   45 variable: IDENTIFIER LEFT_SBRACKET INTEGER_LITERAL . RIGHT_SBRACKET

    RIGHT_SBRACKET  shift, and go to state 76


State 52

   10 statement: variable SINGLE_EQUAL expression . SEMI_COLUMN
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    SEMI_COLUMN    shift, and go to state 77
    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74


State 53

    6 declaration: type IDENTIFIER SINGLE_EQUAL expression . SEMI_COLUMN
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    SEMI_COLUMN    shift, and go to state 78
    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74


State 54

    7 declaration: CONST type IDENTIFIER SINGLE_EQUAL expression . SEMI_COLUMN
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    SEMI_COLUMN    shift, and go to state 79
    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74


State 55

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression
   43           | LEFT_BRACKET expression . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 80
    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74


State 56

   21 expression: LIT LEFT_BRACKET . arguments_opt RIGHT_BRACKET

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    $default  reduce using rule 16 (arguments_opt)

    arguments_opt  go to state 81
    arguments      go to state 82
    expression     go to state 83
    variable       go to state 49
    type           go to state 50


State 57

   20 expression: DP3 LEFT_BRACKET . arguments_opt RIGHT_BRACKET

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    $default  reduce using rule 16 (arguments_opt)

    arguments_opt  go to state 84
    arguments      go to state 82
    expression     go to state 83
    variable       go to state 49
    type           go to state 50


State 58

   22 expression: RSQ LEFT_BRACKET . arguments_opt RIGHT_BRACKET

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    $default  reduce using rule 16 (arguments_opt)

    arguments_opt  go to state 85
    arguments      go to state 82
    expression     go to state 83
    variable       go to state 49
    type           go to state 50


State 59

   28 expression: NOT expression .
   30           | expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    $default  reduce using rule 28 (expression)


State 60

   29 expression: MINUS expression .
   30           | expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    $default  reduce using rule 29 (expression)


State 61

   11 statement: IF LEFT_BRACKET expression RIGHT_BRACKET . statement
   12          | IF LEFT_BRACKET expression RIGHT_BRACKET . statement ELSE statement

    IF             shift, and go to state 23
    LEFT_CBRACKET  shift, and go to state 1
    SEMI_COLUMN    shift, and go to state 25
    IDENTIFIER     shift, and go to state 26

    scope      go to state 27
    statement  go to state 86
    variable   go to state 29


State 62

   42 expression: expression EXP . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 87
    variable    go to state 49
    type        go to state 50


State 63

   40 expression: expression MULTI . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 88
    variable    go to state 49
    type        go to state 50


State 64

   41 expression: expression DIVIDE . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 89
    variable    go to state 49
    type        go to state 50


State 65

   38 expression: expression PLUS . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 90
    variable    go to state 49
    type        go to state 50


State 66

   39 expression: expression MINUS . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 91
    variable    go to state 49
    type        go to state 50


State 67

   32 expression: expression DOUBLE_EQUAL . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 92
    variable    go to state 49
    type        go to state 50


State 68

   33 expression: expression NOT_EQUAL . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 93
    variable    go to state 49
    type        go to state 50


State 69

   34 expression: expression LESS . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 94
    variable    go to state 49
    type        go to state 50


State 70

   35 expression: expression LESS_EQUAL . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 95
    variable    go to state 49
    type        go to state 50


State 71

   36 expression: expression GREATER . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 96
    variable    go to state 49
    type        go to state 50


State 72

   37 expression: expression GREATER_EQUAL . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 97
    variable    go to state 49
    type        go to state 50


State 73

   30 expression: expression LOGICAL_AND . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 98
    variable    go to state 49
    type        go to state 50


State 74

   31 expression: expression LOGICAL_OR . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 99
    variable    go to state 49
    type        go to state 50


State 75

   19 expression: type LEFT_BRACKET . arguments RIGHT_BRACKET

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    arguments   go to state 100
    expression  go to state 83
    variable    go to state 49
    type        go to state 50


State 76

   45 variable: IDENTIFIER LEFT_SBRACKET INTEGER_LITERAL RIGHT_SBRACKET .

    $default  reduce using rule 45 (variable)


State 77

   10 statement: variable SINGLE_EQUAL expression SEMI_COLUMN .

    $default  reduce using rule 10 (statement)


State 78

    6 declaration: type IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN .

    $default  reduce using rule 6 (declaration)


State 79

    7 declaration: CONST type IDENTIFIER SINGLE_EQUAL expression SEMI_COLUMN .

    $default  reduce using rule 7 (declaration)


State 80

   43 expression: LEFT_BRACKET expression RIGHT_BRACKET .

    $default  reduce using rule 43 (expression)


State 81

   21 expression: LIT LEFT_BRACKET arguments_opt . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 101


State 82

   15 arguments_opt: arguments .
   17 arguments: arguments . COMMA expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 15 (arguments_opt)


State 83

   18 arguments: expression .
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74

    $default  reduce using rule 18 (arguments)


State 84

   20 expression: DP3 LEFT_BRACKET arguments_opt . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 103


State 85

   22 expression: RSQ LEFT_BRACKET arguments_opt . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 104


State 86

   11 statement: IF LEFT_BRACKET expression RIGHT_BRACKET statement .
   12          | IF LEFT_BRACKET expression RIGHT_BRACKET statement . ELSE statement

    ELSE  shift, and go to state 105

    $default  reduce using rule 11 (statement)


State 87

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression
   42           | expression EXP expression .

    EXP  shift, and go to state 62

    $default  reduce using rule 42 (expression)


State 88

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   40           | expression MULTI expression .
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP  shift, and go to state 62

    $default  reduce using rule 40 (expression)


State 89

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   41           | expression DIVIDE expression .
   42           | expression . EXP expression

    EXP  shift, and go to state 62

    $default  reduce using rule 41 (expression)


State 90

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   38           | expression PLUS expression .
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 38 (expression)


State 91

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   39           | expression MINUS expression .
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 39 (expression)


State 92

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   32           | expression DOUBLE_EQUAL expression .
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 32 (expression)


State 93

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   33           | expression NOT_EQUAL expression .
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 33 (expression)


State 94

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   34           | expression LESS expression .
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 34 (expression)


State 95

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   35           | expression LESS_EQUAL expression .
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 35 (expression)


State 96

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   36           | expression GREATER expression .
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 36 (expression)


State 97

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   37           | expression GREATER_EQUAL expression .
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP     shift, and go to state 62
    MULTI   shift, and go to state 63
    DIVIDE  shift, and go to state 64
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66

    DOUBLE_EQUAL   error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 37 (expression)


State 98

   30 expression: expression . LOGICAL_AND expression
   30           | expression LOGICAL_AND expression .
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72

    $default  reduce using rule 30 (expression)


State 99

   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   31           | expression LOGICAL_OR expression .
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73

    $default  reduce using rule 31 (expression)


State 100

   17 arguments: arguments . COMMA expression
   19 expression: type LEFT_BRACKET arguments . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 106
    COMMA          shift, and go to state 102


State 101

   21 expression: LIT LEFT_BRACKET arguments_opt RIGHT_BRACKET .

    $default  reduce using rule 21 (expression)


State 102

   17 arguments: arguments COMMA . expression

    LEFT_BRACKET     shift, and go to state 38
    BOOL_TRUE        shift, and go to state 39
    BOOL_FALSE       shift, and go to state 40
    BOOL             shift, and go to state 6
    BVEC2            shift, and go to state 7
    BVEC3            shift, and go to state 8
    BVEC4            shift, and go to state 9
    INT              shift, and go to state 10
    IVEC2            shift, and go to state 11
    IVEC3            shift, and go to state 12
    IVEC4            shift, and go to state 13
    FLOAT            shift, and go to state 14
    VEC2             shift, and go to state 15
    VEC3             shift, and go to state 16
    VEC4             shift, and go to state 17
    LIT              shift, and go to state 41
    DP3              shift, and go to state 42
    RSQ              shift, and go to state 43
    NOT              shift, and go to state 44
    MINUS            shift, and go to state 45
    IDENTIFIER       shift, and go to state 26
    INTEGER_LITERAL  shift, and go to state 46
    FLOAT_LITERAL    shift, and go to state 47

    expression  go to state 107
    variable    go to state 49
    type        go to state 50


State 103

   20 expression: DP3 LEFT_BRACKET arguments_opt RIGHT_BRACKET .

    $default  reduce using rule 20 (expression)


State 104

   22 expression: RSQ LEFT_BRACKET arguments_opt RIGHT_BRACKET .

    $default  reduce using rule 22 (expression)


State 105

   12 statement: IF LEFT_BRACKET expression RIGHT_BRACKET statement ELSE . statement

    IF             shift, and go to state 23
    LEFT_CBRACKET  shift, and go to state 1
    SEMI_COLUMN    shift, and go to state 25
    IDENTIFIER     shift, and go to state 26

    scope      go to state 27
    statement  go to state 108
    variable   go to state 29


State 106

   19 expression: type LEFT_BRACKET arguments RIGHT_BRACKET .

    $default  reduce using rule 19 (expression)


State 107

   17 arguments: arguments COMMA expression .
   30 expression: expression . LOGICAL_AND expression
   31           | expression . LOGICAL_OR expression
   32           | expression . DOUBLE_EQUAL expression
   33           | expression . NOT_EQUAL expression
   34           | expression . LESS expression
   35           | expression . LESS_EQUAL expression
   36           | expression . GREATER expression
   37           | expression . GREATER_EQUAL expression
   38           | expression . PLUS expression
   39           | expression . MINUS expression
   40           | expression . MULTI expression
   41           | expression . DIVIDE expression
   42           | expression . EXP expression

    EXP            shift, and go to state 62
    MULTI          shift, and go to state 63
    DIVIDE         shift, and go to state 64
    PLUS           shift, and go to state 65
    MINUS          shift, and go to state 66
    DOUBLE_EQUAL   shift, and go to state 67
    NOT_EQUAL      shift, and go to state 68
    LESS           shift, and go to state 69
    LESS_EQUAL     shift, and go to state 70
    GREATER        shift, and go to state 71
    GREATER_EQUAL  shift, and go to state 72
    LOGICAL_AND    shift, and go to state 73
    LOGICAL_OR     shift, and go to state 74

    $default  reduce using rule 17 (arguments)


State 108

   12 statement: IF LEFT_BRACKET expression RIGHT_BRACKET statement ELSE statement .

    $default  reduce using rule 12 (statement)
